{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Organization_Name": {
      "defaultValue": "Contoso",
      "type": "string",
      "metadata": {
        "description": "Short name of the organization. Used for the name of global resources created."
      }
    },
    "projectname": {
      "defaultValue": "adap",
      "type": "string",
      "metadata": {
        "description": "Short name of the ADAP project. Used for the name of resources created. (default: adap)"
      }
    },
    "projectversion": {
      "type": "string",
      "metadata": {
        "description": "Version number of the project."
      }
    },
    "chargebackid": {
      "defaultValue": "8675309",
      "type": "string",
      "metadata": {
        "description": "Chargeback Id for the resource. Used in Tags"
      }
    },
    "dri": {
      "defaultValue": "admin@contoso.com",
      "type": "string",
      "metadata": {
        "description": "The email address of the directly responsible individual. used in Tags"
      }
    },
    "environmenttag": {
      "defaultValue": "dev",
      "type": "string",
      "metadata": {
        "description": "The tag name of the environment. (smk, dev, uat, prod, sbx)"
      }
    },
    "locationtag": {
      "defaultValue": "eus",
      "type": "string",
      "metadata": {
        "description": "The tag name of the location or region. Should align with the resource location. (eus, eus2, wus, wus2, scus, ncus, cus)"
      }
    },
    "sqlServerAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The Azure SQL Server Administrator (SA) username "
      }
    },
    "sqlServerAdminPassword": {
      "type": "string",
      "metadata": {
        "description": "The Azure SQL Server Administrator (SA) password"
      }
    },
    "sqlServerActiveDirectoryAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "The active directory admin that will be assigned to the SQL server"
      }
    },
    "sqlServerActiveDirectoryAdminObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object id of the active directory admin that will be assigned to the SQL server"
      }
    },
    "threatDetectionEmailAddress": {
      "type": "string",
      "metadata": {
        "description": "The email address that threat alerts will be sent to"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the OMS workspace that will collect audit events"
      }
    }
  },
  "variables": {
    "sqlServerName": "[concat(parameters('projectname'),'-',parameters('environmenttag'),'-',parameters('locationtag'),'-01-sql')]",
    "auditPolicyName": "[concat(variables('sqlServerName'), '-DefaultAuditPolicy')]",
    "securityAlertPolicyName": "[concat(variables('sqlServerName'), '-DefaultSecurityAlert')]",
    "diagnosticSettingName": "SQLSecurityAuditEvents_3d229c42-c7e7-4c97-9a99-ec0d0d8b86c1",
    "sqlStorageAccountName": "[concat(parameters('projectname'),parameters('environmenttag'),parameters('locationtag'),'001stg')]",
    "deployment-prefix": "[concat(parameters('Organization_Name'), '-', parameters('projectname'),'-sharedsvcs')]",
    "mgmtStorageAccountName": "[concat('mgmt',parameters('environmenttag'),parameters('locationtag'),'001stg')]",
    "logAnalyticsWorkspaceName": "[concat(variables('deployment-prefix'), '-log')]",
    "logAnalyticsWorkspaceResourceGroupName": "[concat('mgmt-',parameters('environmenttag'),'-',parameters('locationtag'),'-rg')]",
    "logAnalyticsWorkspaceSubscriptionId": "[subscription().subscriptionId]"
  },
  "resources": [
    {
      "name": "[variables('sqlServerName')]",
      "type": "Microsoft.Sql/servers",
      "tags": {
        "Display Name": "[concat('SQL Server: ',parameters('projectname'))]",
        "Bill To - Internal Chargeback ID": "parameters('chargebackid')",
        "Operator or Directly Responsible Individual (DRI)": "parameters('dri')",
        "Project Name": "parameters('projectname')",
        "Project Version": "parameters('projectversion')",
        "Environment": "parameters('environmenttag')",
        "Tier": "Data",
        "Data Profile": "Confidential"
      },
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminUserName')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminPassword')]"
      },
      "resources": [
        {
          "type": "databases",
          "apiVersion": "2017-10-01-preview",
          "location": "[resourceGroup().location]",
          "name": "master",
          "properties": {
          },
          "dependsOn": [
            "[variables('sqlServerName')]"
          ]
        },
        {
          "condition": "[greater(length(variables('logAnalyticsWorkspaceName')), 0)]",
          "type": "databases/providers/diagnosticSettings",
          "name": "[concat('master/microsoft.insights/',variables('diagnosticSettingName'))]",
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[variables('diagnosticSettingName')]",
            "workspaceId": "[resourceId(variables('logAnalyticsWorkspaceSubscriptionId'), variables('logAnalyticsWorkspaceResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
            "logs": [
              {
                "category": "SQLSecurityAuditEvents",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/databases/master')]",
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ]
        },
        {
          "apiVersion": "2017-03-01-preview",
          "type": "auditingSettings",
          "name": "[variables('AuditPolicyName')]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "storageEndpoint": "[concat('https://', variables('sqlStorageAccountName'), '.blob.core.windows.net/')]",
            "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('sqlStorageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
            "retentionDays": 90,
            "auditActionsAndGroups": [
              "BATCH_COMPLETED_GROUP",
              "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP",
              "FAILED_DATABASE_AUTHENTICATION_GROUP"
            ],
            "isAzureMonitorTargetEnabled": true
          }
        },
        {
          "apiVersion": "2017-03-01-preview",
          "type": "securityAlertPolicies",
          "name": "[variables('SecurityAlertPolicyName')]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]",
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/auditingSettings/', variables('AuditPolicyName'))]"
          ],
          "properties": {
            "state": "Enabled",
            "emailAddresses": [
              "[parameters('threatDetectionEmailAddress')]"
            ],
            "emailAccountAdmins": false,
            "retentionDays": 90
          }
        },
        {
          "type": "administrators",
          "name": "activeDirectory",
          "apiVersion": "2014-04-01-preview",
          "location": "[resourceGroup().location]",
          "properties": {
            "administratorType": "ActiveDirectory",
            "login": "[parameters('sqlServerActiveDirectoryAdminLogin')]",
            "sid": "[parameters('sqlServerActiveDirectoryAdminObjectId')]",
            "tenantId": "[subscription().tenantId]"
          },
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ]
        }
      ]
    }
  ],
  "outputs": {
    "sqlServerName": {
      "type": "string",
      "value": "[variables('sqlServerName')]"
    },
    "diagnosticSettingName": {
      "type": "string",
      "value": "[variables('diagnosticSettingName')]"
    },
    "sqlServerFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlServerName'))).fullyQualifiedDomainName]"
    }
  }
}
